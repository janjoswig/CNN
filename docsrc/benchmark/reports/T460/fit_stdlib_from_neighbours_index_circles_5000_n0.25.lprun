Timer unit: 1e-06 s

Total time: 1.69511 s
File: /home/janjoswig/CNN/tests/benchmark/snippets/fits.py
Function: fit_stdlib_from_neighbours_index at line 154

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   154                                           def fit_stdlib_from_neighbours_index(
   155                                                   cnn_cutoff: int,
   156                                                   neighbours: List[Set[int]]) -> List:
   157                                               """Worker function variant applying the CNN algorithm.
   158                                           
   159                                               Assigns labels to points starting from pre-computed neighbour list.
   160                                               Uses Python standard library only.  Uses builtin function `index`
   161                                               to find unassigned initial cluster points, which is expected to be
   162                                               fast when done seldom (compare to fit_stdlib_from_neighbours_loop).
   163                                           
   164                                               Args:
   165                                                   cnn_cutoff: Similarity criterion
   166                                                   neighbours: List of length #points containing sets of
   167                                                       neighbouring point indices
   168                                           
   169                                               Returns:
   170                                                   Labels
   171                                               """
   172                                           
   173                                               # Initialise labels
   174         1        544.0    544.0      0.0      labels = [0 for _ in range(len(neighbours))]
   175                                           
   176                                               # Track assigment
   177         1        526.0    526.0      0.0      consider = [True for _ in range(len(neighbours))]
   178                                           
   179                                               # Start with first cluster (0 = noise)
   180         1          1.0      1.0      0.0      current = 1
   181                                           
   182                                               # Initialise queue of points to scan
   183         1          2.0      2.0      0.0      queue = deque()
   184                                           
   185                                               while True:
   186         4          3.0      0.8      0.0          try:
   187         4         89.0     22.2      0.0              point = consider.index(True)  # Pick starting point
   188         1          3.0      3.0      0.0          except ValueError:               # All points assigned
   189         1          1.0      1.0      0.0              break
   190         3          5.0      1.7      0.0          labels[point] = current          # Assign cluster label
   191         3          2.0      0.7      0.0          consider[point] = False           # Mark point as included
   192         3          4.0      1.3      0.0          queue.append(point)              # Add point to queue
   193                                           
   194      5003       4124.0      0.8      0.2          while queue:
   195      5000       5782.0      1.2      0.3              point = queue.popleft()      # FIFO
   196                                           
   197                                                       # Loop over neighbouring points
   198      5000       6318.0      1.3      0.4              neigh = neighbours[point]
   199    709444     545387.0      0.8     32.2              for member in neigh:
   200    704444     560644.0      0.8     33.1                  if not consider[member]:
   201                                                               # Point already assigned
   202    699443     495528.0      0.7     29.2                      continue
   203                                           
   204                                                           # conditional growth
   205      5001      61300.0     12.3      3.6                  if len(neigh.intersection(neighbours[member])) >= cnn_cutoff:
   206      4997       5753.0      1.2      0.3                      labels[member] = current
   207      4997       4166.0      0.8      0.2                      consider[member] = False
   208      4997       4923.0      1.0      0.3                      queue.append(member)
   209                                           
   210         3          3.0      1.0      0.0          current += 1
   211                                           
   212         1          1.0      1.0      0.0      return labels