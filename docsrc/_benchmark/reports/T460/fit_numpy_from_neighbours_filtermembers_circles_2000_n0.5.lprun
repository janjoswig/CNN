Timer unit: 1e-06 s

Total time: 0.0918 s
File: /home/janjoswig/CNN/tests/benchmark/snippets/fits.py
Function: fit_numpy_from_neighbours_filtermembers at line 570

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   570                                           def fit_numpy_from_neighbours_filtermembers(
   571                                                   cnn_cutoff: int,
   572                                                   neighbours: np.ndarray) -> np.ndarray:
   573                                               """Worker function variant applying the CNN algorithm.
   574                                           
   575                                               Assigns labels to points starting from pre-computed neighbour list.
   576                                               Uses Python standard library and NumPy where appropriate.  Modifies
   577                                               the loop over neighbour neighbours with a bulk check for inclusion.
   578                                               Also analouge to `fit_std_from_neighbours_loop`
   579                                           
   580                                               Args:
   581                                                   cnn_cutoff: Similarity criterion
   582                                                   neighbours: NumPy array of length #points containing arrays of
   583                                                       neighbouring point indices
   584                                           
   585                                               Returns:
   586                                                   Labels
   587                                               """
   588                                           
   589         1          5.0      5.0      0.0      len_ = neighbours.shape[0]
   590                                           
   591                                               # Initialise labels
   592         1         21.0     21.0      0.0      labels = np.zeros(len_)
   593                                           
   594                                               # Track assigment
   595         1         40.0     40.0      0.0      consider = np.ones(len_, dtype=bool)
   596                                           
   597                                               # Start with first cluster (0 = noise)
   598         1          2.0      2.0      0.0      current = 1
   599                                           
   600                                               # Initialise queue of points to scan
   601         1          2.0      2.0      0.0      queue = deque()
   602                                           
   603      2001       1017.0      0.5      1.1      for point in range(len_):
   604      2000       1144.0      0.6      1.2          if not consider[point]:
   605                                                       # Point already assigned
   606      1998        979.0      0.5      1.1              continue
   607         2          4.0      2.0      0.0          labels[point] = current            # Assign cluster label
   608         2          2.0      1.0      0.0          consider[point] = False             # Mark point as included
   609                                           
   610                                                   while True:
   611                                                       # Loop over neighbouring points
   612      2000       1831.0      0.9      2.0              neigh = neighbours[point]
   613                                                       # Loop only over members not included
   614      4034       8271.0      2.1      9.0              for member in neigh[consider[neigh]]:
   615                                                           # conditional growth
   616      6102      65902.0     10.8     71.8                  if len(np.intersect1d(
   617      2034       2044.0      1.0      2.2                          neigh, neighbours[member], assume_unique=True
   618      2034       1764.0      0.9      1.9                          )) >= cnn_cutoff:
   619      1998       2256.0      1.1      2.5                      labels[member] = current
   620      1998       1684.0      0.8      1.8                      consider[member] = False
   621      1998       1729.0      0.9      1.9                      queue.append(member)
   622                                           
   623      2000       1384.0      0.7      1.5              if not queue:
   624         2          0.0      0.0      0.0                  break
   625      1998       1716.0      0.9      1.9              point = queue.popleft()  # FIFO
   626                                           
   627         2          2.0      1.0      0.0          current += 1
   628                                           
   629         1          1.0      1.0      0.0      return labels