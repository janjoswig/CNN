Timer unit: 1e-06 s

Total time: 6.86172 s
File: /home/janjoswig/CNN/tests/benchmark/snippets/fits.py
Function: fit_stdlib_from_neighbours_loop at line 215

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   215                                           def fit_stdlib_from_neighbours_loop(
   216                                                   cnn_cutoff: int,
   217                                                   neighbours: List[Set[int]]) -> List:
   218                                               """Worker function variant applying the CNN algorithm.
   219                                           
   220                                               Assigns labels to points starting from pre-computed neighbour list.
   221                                               Uses Python standard library only.  Minor design difference to
   222                                               `fit_stdlib_from_neighbours_index` in looping over all points
   223                                               instead of checking for `include.index(True)`. Expected to be faster
   224                                               when many cluster initialisations are done. Also, checking queue
   225                                               at the end of the inner loop instead of in the begenning (no
   226                                               performance difference expected, but unnecessary adding of initial
   227                                               points to queue is avoided).
   228                                           
   229                                               Args:
   230                                                   cnn_cutoff: Similarity criterion
   231                                                   neighbours: List of length #points containing sets of
   232                                                       neighbouring point indices
   233                                           
   234                                               Returns:
   235                                                   Labels
   236                                               """
   237                                           
   238         1          2.0      2.0      0.0      len_ = len(neighbours)
   239                                           
   240                                               # Initialise labels
   241         1       1268.0   1268.0      0.0      labels = [0 for _ in range(len_)]
   242                                           
   243                                               # Track assigment
   244         1       1258.0   1258.0      0.0      include = [True for _ in range(len_)]
   245                                           
   246                                               # Start with first cluster (0 = noise)
   247         1          2.0      2.0      0.0      current = 1
   248                                           
   249                                               # Initialise queue of points to scan
   250         1          2.0      2.0      0.0      queue = deque()
   251                                           
   252     10001       6557.0      0.7      0.1      for point in range(len_):
   253     10000       6732.0      0.7      0.1          if not include[point]:
   254                                                       # Point already assigned
   255      9998       6207.0      0.6      0.1              continue
   256         2          3.0      1.5      0.0          labels[point] = current          # Assign cluster label
   257         2          2.0      1.0      0.0          include[point] = False           # Mark point as included
   258                                           
   259                                                   while True:
   260                                                       # Loop over neighbouring points
   261     10000      14112.0      1.4      0.2              neigh = neighbours[point]
   262   2831100    2202524.0      0.8     32.1              for member in neigh:
   263   2821100    2321405.0      0.8     33.8                  if not include[member]:
   264                                                               # Point already assigned
   265   2811102    2018764.0      0.7     29.4                      continue
   266                                           
   267                                                           # conditional growth
   268      9998     227156.0     22.7      3.3                  if len(neigh.intersection(neighbours[member])) >= cnn_cutoff:
   269      9998      12521.0      1.3      0.2                      labels[member] = current
   270      9998       9010.0      0.9      0.1                      include[member] = False
   271      9998      10785.0      1.1      0.2                      queue.append(member)
   272                                           
   273     10000       9427.0      0.9      0.1              if not queue:
   274         2          1.0      0.5      0.0                  break
   275      9998      13980.0      1.4      0.2              point = queue.popleft()  # FIFO
   276                                           
   277         2          4.0      2.0      0.0          current += 1
   278                                           
   279         1          2.0      2.0      0.0      return labels