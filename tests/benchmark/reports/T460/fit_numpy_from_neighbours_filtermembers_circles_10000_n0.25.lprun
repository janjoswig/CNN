Timer unit: 1e-06 s

Total time: 0.574805 s
File: /home/janjoswig/CNN/tests/benchmark/snippets/fits.py
Function: fit_numpy_from_neighbours_filtermembers at line 414

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   414                                           def fit_numpy_from_neighbours_filtermembers(
   415                                                   cnn_cutoff: int,
   416                                                   neighbours: np.ndarray) -> np.ndarray:
   417                                               """Worker function variant applying the CNN algorithm.
   418                                           
   419                                               Assigns labels to points starting from pre-computed neighbour list.
   420                                               Uses Python standard library and NumPy where appropriate.  Modifies
   421                                               the loop over neighbour neighbours with a bulk check for inclusion.
   422                                               Also analouge to `fit_std_from_neighbours_loop`
   423                                           
   424                                               Args:
   425                                                   cnn_cutoff: Similarity criterion
   426                                                   neighbours: NumPy array of length #points containing arrays of
   427                                                       neighbouring point indices
   428                                           
   429                                               Returns:
   430                                                   Labels
   431                                               """
   432                                           
   433         1          6.0      6.0      0.0      len_ = neighbours.shape[0]
   434                                           
   435                                               # Initialise labels
   436         1         30.0     30.0      0.0      labels = np.zeros(len_)
   437                                           
   438                                               # Track assigment
   439         1         43.0     43.0      0.0      include = np.ones(len_, dtype=bool)
   440                                           
   441                                               # Start with first cluster (0 = noise)
   442         1          2.0      2.0      0.0      current = 1
   443                                           
   444                                               # Initialise queue of points to scan
   445         1          2.0      2.0      0.0      queue = deque()
   446                                           
   447     10001       5931.0      0.6      1.0      for point in range(len_):
   448     10000       5663.0      0.6      1.0          if not include[point]:
   449                                                       # Point already assigned
   450      9998       4749.0      0.5      0.8              continue
   451         2          5.0      2.5      0.0          labels[point] = current            # Assign cluster label
   452         2          4.0      2.0      0.0          include[point] = False             # Mark point as included
   453                                           
   454                                                   while True:
   455                                                       # Loop over neighbouring points
   456     10000       8648.0      0.9      1.5              neigh = neighbours[point]
   457                                                       # Loop only over members not included
   458     19998      40573.0      2.0      7.1              for member in neigh[include[neigh]]:
   459                                                           # conditional growth
   460     29994     451593.0     15.1     78.6                  if len(np.intersect1d(
   461      9998      10271.0      1.0      1.8                          neigh, neighbours[member], assume_unique=True
   462      9998       7814.0      0.8      1.4                          )) >= cnn_cutoff:
   463      9998       9860.0      1.0      1.7                      labels[member] = current
   464      9998       7993.0      0.8      1.4                      include[member] = False
   465      9998       8254.0      0.8      1.4                      queue.append(member)
   466                                           
   467     10000       5902.0      0.6      1.0              if not queue:
   468         2          2.0      1.0      0.0                  break
   469      9998       7456.0      0.7      1.3              point = queue.popleft()  # FIFO
   470                                           
   471         2          2.0      1.0      0.0          current += 1
   472                                           
   473         1          2.0      2.0      0.0      return labels