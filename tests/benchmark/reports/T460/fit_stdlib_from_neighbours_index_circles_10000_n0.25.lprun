Timer unit: 1e-06 s

Total time: 6.70238 s
File: /home/janjoswig/CNN/tests/benchmark/snippets/fits.py
Function: fit_stdlib_from_neighbours_index at line 154

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   154                                           def fit_stdlib_from_neighbours_index(
   155                                                   cnn_cutoff: int,
   156                                                   neighbours: List[Set[int]]) -> List:
   157                                               """Worker function variant applying the CNN algorithm.
   158                                           
   159                                               Assigns labels to points starting from pre-computed neighbour list.
   160                                               Uses Python standard library only.  Uses builtin function `index`
   161                                               to find unassigned initial cluster points, which is expected to be
   162                                               fast when done seldom (compare to fit_stdlib_from_neighbours_loop).
   163                                           
   164                                               Args:
   165                                                   cnn_cutoff: Similarity criterion
   166                                                   neighbours: List of length #points containing sets of
   167                                                       neighbouring point indices
   168                                           
   169                                               Returns:
   170                                                   Labels
   171                                               """
   172                                           
   173                                               # Initialise labels
   174         1       7889.0   7889.0      0.1      labels = [0 for _ in range(len(neighbours))]
   175                                           
   176                                               # Track assigment
   177         1       5647.0   5647.0      0.1      include = [True for _ in range(len(neighbours))]
   178                                           
   179                                               # Start with first cluster (0 = noise)
   180         1          4.0      4.0      0.0      current = 1
   181                                           
   182                                               # Initialise queue of points to scan
   183         1          5.0      5.0      0.0      queue = deque()
   184                                           
   185                                               while True:
   186         3          4.0      1.3      0.0          try:
   187         3        118.0     39.3      0.0              point = include.index(True)  # Pick starting point
   188         1          2.0      2.0      0.0          except ValueError:               # All points assigned
   189         1          2.0      2.0      0.0              break
   190         2          5.0      2.5      0.0          labels[point] = current          # Assign cluster label
   191         2          4.0      2.0      0.0          include[point] = False           # Mark point as included
   192         2          6.0      3.0      0.0          queue.append(point)              # Add point to queue
   193                                           
   194     10002       8300.0      0.8      0.1          while queue:
   195     10000      10916.0      1.1      0.2              point = queue.popleft()      # FIFO
   196                                           
   197                                                       # Loop over neighbouring points
   198     10000      12762.0      1.3      0.2              neigh = neighbours[point]
   199   2831100    2154022.0      0.8     32.1              for member in neigh:
   200   2821100    2272607.0      0.8     33.9                  if not include[member]:
   201                                                               # Point already assigned
   202   2811102    1980121.0      0.7     29.5                      continue
   203                                           
   204                                                           # conditional growth
   205      9998     218294.0     21.8      3.3                  if len(neigh.intersection(neighbours[member])) >= cnn_cutoff:
   206      9998      12179.0      1.2      0.2                      labels[member] = current
   207      9998       9196.0      0.9      0.1                      include[member] = False
   208      9998      10291.0      1.0      0.2                      queue.append(member)
   209                                           
   210         2          2.0      1.0      0.0          current += 1
   211                                           
   212         1          1.0      1.0      0.0      return labels