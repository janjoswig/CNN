Timer unit: 1e-06 s

Total time: 0.602498 s
File: /home/janjoswig/CNN/tests/benchmark/snippets/fits.py
Function: fit_stdlib_from_neighbours_index at line 181

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
   181                                           def fit_stdlib_from_neighbours_index(
   182                                                   cnn_cutoff: int,
   183                                                   neighbours: List[Set[int]]) -> List:
   184                                               """Worker function variant applying the CNN algorithm.
   185                                           
   186                                               Assigns labels to points starting from pre-computed neighbour list.
   187                                               Uses Python standard library only.  Uses builtin function `index`
   188                                               to find unassigned initial cluster points, which is expected to be
   189                                               fast when done seldom (compare to fit_stdlib_from_neighbours_loop).
   190                                           
   191                                               Args:
   192                                                   cnn_cutoff: Similarity criterion
   193                                                   neighbours: List of length #points containing sets of
   194                                                       neighbouring point indices
   195                                           
   196                                               Returns:
   197                                                   Labels
   198                                               """
   199                                           
   200                                               # Initialise labels
   201         1        972.0    972.0      0.2      labels = [0 for _ in range(len(neighbours))]
   202                                           
   203                                               # Track assigment
   204         1        923.0    923.0      0.2      consider = [True for _ in range(len(neighbours))]
   205                                           
   206                                               # Start with first cluster (0 = noise)
   207         1          3.0      3.0      0.0      current = 1
   208                                           
   209                                               # Initialise queue of points to scan
   210         1          4.0      4.0      0.0      queue = deque()
   211                                           
   212                                               while True:
   213         3          5.0      1.7      0.0          try:
   214         3         42.0     14.0      0.0              point = consider.index(True)  # Pick starting point
   215         1          3.0      3.0      0.0          except ValueError:               # All points assigned
   216         1          2.0      2.0      0.0              break
   217         2          4.0      2.0      0.0          labels[point] = current          # Assign cluster label
   218         2          3.0      1.5      0.0          consider[point] = False           # Mark point as included
   219         2          4.0      2.0      0.0          queue.append(point)              # Add point to queue
   220                                           
   221      2002       1457.0      0.7      0.2          while queue:
   222      2000       1790.0      0.9      0.3              point = queue.popleft()      # FIFO
   223                                           
   224                                                       # Loop over neighbouring points
   225      2000       2035.0      1.0      0.3              neigh = neighbours[point]
   226    262204     194223.0      0.7     32.2              for member in neigh:
   227    260204     199339.0      0.8     33.1                  if not consider[member]:
   228                                                               # Point already assigned
   229    258170     176261.0      0.7     29.3                      continue
   230                                           
   231                                                           # conditional growth
   232      2034      20057.0      9.9      3.3                  if len(neigh.intersection(neighbours[member])) >= cnn_cutoff:
   233      1998       1994.0      1.0      0.3                      labels[member] = current
   234      1998       1607.0      0.8      0.3                      consider[member] = False
   235      1998       1766.0      0.9      0.3                      queue.append(member)
   236                                           
   237         2          3.0      1.5      0.0          current += 1
   238                                           
   239         1          1.0      1.0      0.0      return labels